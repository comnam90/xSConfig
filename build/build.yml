stages:
- stage: Build
  displayName: 'Run Build'
  jobs:
  - job: 'Build'
    displayName: 'Build & test'
    pool:
      vmImage: 'windows-2019'
    steps:
    - task: PowerShell@2
      displayName: 'Run tests'
      inputs:
        targetType: Inline
        script: ./build/build.ps1 -Bootstrap -Test -CodeCoverage
      env:
            AgentTemp: $(Agent.TempDirectory)

    - task: PublishTestResults@2
      displayName: 'Publish test results'
      inputs:
        testRunner: NUnit
        testResultsFiles: '**/TestResults.xml'
      condition: succeededOrFailed()
    - task: PublishCodeCoverageResults@1
      displayName: 'Publish code coverage results'
      inputs:
        summaryFileLocation: $(Agent.TempDirectory)/CoverageResults.xml
        pathToSources: $(Agent.TempDirectory)
      condition: succeededOrFailed()

    - task: Bash@3
      displayName: 'Upload coverage to Codecov'
      inputs:
        targetType: 'filePath' # Optional. Options: filePath, inline
        filePath: ./codecov.sh
        arguments: -f coverage.json -t $(CODECOV_TOKEN)
        #script: '# Write your commands here# Use the environment variables input below to pass secret variables to this script' # Required when targetType == Inline
        #workingDirectory: # Optional
        #failOnStderr: false # Optional

    - task: PublishPipelineArtifact@0
      displayName: 'Publish compiled module artifact'
      inputs:
        artifactName: 'xSConfig'
        targetPath: ./src
      condition: succeededOrFailed()

    - task: PublishPipelineArtifact@0
      displayName: 'Publish Pipelines scripts as artifact'
      inputs:
        artifactName: 'PipelinesScripts'
        targetPath: ./build
      condition: succeededOrFailed()